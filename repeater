

//Glyn Hudson openenergymonitor.org GNU GPL V3 7/7/11
//Credit to JCW from Jeelabs.org for RFM12 
#define RF69_COMPAT 1  //Set to 1 if using RFM69CW or 0 is using RFM12B
#include <JeeLib.h>  //from jeelabs.org
//ISR(WDT_vect) { Sleepy::watchdogEvent(); } // Setup the watchdog
#define myNodeID 11          //node ID of tx (range 0-30)
#define network     210      //network group (can be in the range 1-250).
#define RF_freq RF12_433MHZ     //Freq of RF12B can be RF12_433MHZ, RF12_868MHZ or RF12_915MHZ. Match freq to module


typedef struct { int battery; int waterwheel; int waterBattery; } PayloadTX;      // create structure - a neat way of packaging data for RF comms
PayloadTX emontx;  
int incomingByte;
char incomingChar;
char serialBuffer[20];
String message;
const int LED = 6;                                             //emonTx V3
void setup() {
  rf12_initialize(myNodeID,RF_freq,network);   //Initialize RFM12 with settings defined above  
Serial.begin(9600);
Serial.println("RFM12B Transmitter - Simple demo");

 Serial.print("Node: "); 
 Serial.print(myNodeID); 
 Serial.print(" Freq: "); 
 if (RF_freq == RF12_433MHZ) Serial.print("433Mhz");
 if (RF_freq == RF12_868MHZ) Serial.print("868Mhz");
 if (RF_freq == RF12_915MHZ) Serial.print("915Mhz"); 
 Serial.print(" Network: "); 
 Serial.println(network);

pinMode(LED, OUTPUT);

}

void loop() {

    
  while (Serial.available() > 0) {
    // read the oldest byte in the serial buffer:
    Serial.readBytesUntil(13, serialBuffer, 20) ;
  
    for(int i=0;i<=15;i++)
    {
      Serial.print(char(serialBuffer[i]));
    delay(10);
    }
    Serial.println("arty?");
  delay(10);
  }  
  

for (int p=3; p<=5; p++)
  {
    message+=char(serialBuffer[p]);
    delay(10);
  }

    emontx.waterwheel=(message.toInt());
     
    //Serial.println(emontx.waterwheel);
    message="";
  for (int j=9; j<=11; j++)
  {
    message+=char(serialBuffer[j]);
    delay(10);
  }

    emontx.waterBattery=(message.toInt());
     
    //Serial.println(emontx.waterBattery);
    message="";
  
    
   
  
  emontx.battery=analogRead(A3);

    rf12_sendNow(0, &emontx, sizeof emontx);                    
    rf12_sendWait(2);
    

  Serial.print("battery: "); Serial.println(emontx.battery); 
  Serial.print("waterwheel"); Serial.println(emontx.waterwheel);
  Serial.print("waterBattery"); Serial.println(emontx.waterBattery);  
  Serial.println("  "); 

digitalWrite(LED, HIGH); delay(500); digitalWrite(LED, LOW);  
  message="";

delay(10000);
}


